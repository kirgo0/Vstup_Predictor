// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vstup_Predictor.Services;

#nullable disable

namespace Vstup_Predictor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250822123349_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Vstup_Predictor.Models.Application", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Grade")
                        .HasColumnType("double");

                    b.Property<string>("OfferId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("PersonId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Offer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BudgetCount")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Scpeciality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UniversityId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TestResults")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.University", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Application", b =>
                {
                    b.HasOne("Vstup_Predictor.Models.Offer", "Offer")
                        .WithMany("Applications")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vstup_Predictor.Models.Person", "Person")
                        .WithMany("Applications")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Offer", b =>
                {
                    b.HasOne("Vstup_Predictor.Models.University", null)
                        .WithMany("Offers")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vstup_Predictor.Models.University", b =>
                {
                    b.HasOne("Vstup_Predictor.Models.City", null)
                        .WithMany("University")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vstup_Predictor.Models.City", b =>
                {
                    b.Navigation("University");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Offer", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.Person", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Vstup_Predictor.Models.University", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
